import tkinter as tk
from tkinter import messagebox

# Function to add a book
def add_book():
    title = title_entry.get()
    author = author_entry.get()
    year = year_entry.get()
    isbn = isbn_entry.get()

    if title and author and year and isbn:
        with open("books.txt", "a") as file:
            file.write(f"{title},{author},{year},{isbn}\n")
        messagebox.showinfo("Success", "Book added successfully!")
        title_entry.delete(0, tk.END)
        author_entry.delete(0, tk.END)
        year_entry.delete(0, tk.END)
        isbn_entry.delete(0, tk.END)
    else:
        messagebox.showwarning("Input Error", "Please fill in all fields.")

# Function to view all books
def view_books():
    book_list.delete(0, tk.END)
    try:
        with open("books.txt", "r") as file:
            for line in file:
                book_list.insert(tk.END, line.strip())
    except FileNotFoundError:
        messagebox.showerror("Error", "No books found. Add a book first!")

# Function to search for a book by title
def search_book():
    search_term = search_entry.get().lower()
    book_list.delete(0, tk.END)
    found = False
    try:
        with open("books.txt", "r") as file:
            for line in file:
                if search_term in line.split(",")[0].lower():
                    book_list.insert(tk.END, line.strip())
                    found = True
        if not found:
            messagebox.showinfo("Not Found", "No book found with that title.")
    except FileNotFoundError:
        messagebox.showerror("Error", "No books found. Add a book first!")

# Function to delete a selected book
def delete_book():
    selected_book = book_list.get(tk.ACTIVE)
    if selected_book:
        with open("books.txt", "r") as file:
            lines = file.readlines()
        with open("books.txt", "w") as file:
            for line in lines:
                if line.strip() != selected_book:
                    file.write(line)
        view_books()
        messagebox.showinfo("Success", "Book deleted successfully!")
    else:
        messagebox.showwarning("Selection Error", "Please select a book to delete.")

# Create the main application window
root = tk.Tk()
root.title("Library Management System")

# Create and place labels and entry fields for book details
tk.Label(root, text="Title").grid(row=0, column=0)
title_entry = tk.Entry(root)
title_entry.grid(row=0, column=1)

tk.Label(root, text="Author").grid(row=1, column=0)
author_entry = tk.Entry(root)
author_entry.grid(row=1, column=1)

tk.Label(root, text="Year").grid(row=2, column=0)
year_entry = tk.Entry(root)
year_entry.grid(row=2, column=1)

tk.Label(root, text="ISBN").grid(row=3, column=0)
isbn_entry = tk.Entry(root)
isbn_entry.grid(row=3, column=1)

# Create and place buttons for adding, viewing, searching, and deleting books
add_button = tk.Button(root, text="Add Book", command=add_book)
add_button.grid(row=4, column=0, pady=10)

view_button = tk.Button(root, text="View All Books", command=view_books)
view_button.grid(row=4, column=1, pady=10)

search_label = tk.Label(root, text="Search by Title")
search_label.grid(row=5, column=0)

search_entry = tk.Entry(root)
search_entry.grid(row=5, column=1)

search_button = tk.Button(root, text="Search", command=search_book)
search_button.grid(row=6, column=0, pady=10)

delete_button = tk.Button(root, text="Delete Selected", command=delete_book)
delete_button.grid(row=6, column=1, pady=10)

# Create and place a listbox to display the list of books
book_list = tk.Listbox(root, width=50, height=10)
book_list.grid(row=7, column=0, columnspan=2, padx=10, pady=10)

# Run the application
root.mainloop()
